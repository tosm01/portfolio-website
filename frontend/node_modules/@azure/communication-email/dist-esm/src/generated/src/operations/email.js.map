{"version":3,"file":"email.js","sourceRoot":"","sources":["../../../../../src/generated/src/operations/email.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAEH,OAAO,KAAK,QAAQ,MAAM,kBAAkB,CAAC;AAC7C,OAAO,KAAK,OAAO,MAAM,mBAAmB,CAAC;AAC7C,OAAO,KAAK,UAAU,MAAM,sBAAsB,CAAC;AAQnD;;GAEG;AACH,MAAM,OAAO,KAAK;IAGhB;;;OAGG;IACH,YAAY,MAA0B;QACpC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACvB,CAAC;IAED;;;;OAIG;IACH,aAAa,CACX,SAAiB,EACjB,OAAmC;QAEnC,MAAM,gBAAgB,GAAgC,QAAQ,CAAC,oCAAoC,CACjG,OAAO,IAAI,EAAE,CACd,CAAC;QACF,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,SAAS,EAAE,OAAO,EAAE,gBAAgB,EAAE,EACxC,0BAA0B,CACY,CAAC;IAC3C,CAAC;IAED;;;;;;;;;;;;OAYG;IACH,IAAI,CACF,sBAA8B,EAC9B,sBAA8B,EAC9B,YAA0B,EAC1B,OAAmC;QAEnC,MAAM,gBAAgB,GAAgC,QAAQ,CAAC,oCAAoC,CACjG,OAAO,IAAI,EAAE,CACd,CAAC;QACF,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;YACE,sBAAsB;YACtB,sBAAsB;YACtB,YAAY;YACZ,OAAO,EAAE,gBAAgB;SAC1B,EACD,iBAAiB,CACY,CAAC;IAClC,CAAC;CACF;AACD,2BAA2B;AAE3B,MAAM,UAAU,GAAG,IAAI,QAAQ,CAAC,UAAU,CAAC,OAAO,EAAE,WAAW,CAAC,KAAK,CAAC,CAAC;AAEvE,MAAM,0BAA0B,GAA2B;IACzD,IAAI,EAAE,4BAA4B;IAClC,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,gBAAgB;YACpC,aAAa,EAAE,OAAO,CAAC,yBAAyB;SACjD;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,0BAA0B;YAC9C,aAAa,EAAE,OAAO,CAAC,yBAAyB;SACjD;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE,CAAC,UAAU,CAAC,QAAQ,EAAE,UAAU,CAAC,SAAS,CAAC;IAC1D,UAAU;CACX,CAAC;AACF,MAAM,iBAAiB,GAA2B;IAChD,IAAI,EAAE,cAAc;IACpB,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,aAAa,EAAE,OAAO,CAAC,gBAAgB;SACxC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,0BAA0B;YAC9C,aAAa,EAAE,OAAO,CAAC,gBAAgB;SACxC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,YAAY;IACpC,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC;IACpC,gBAAgB,EAAE;QAChB,UAAU,CAAC,WAAW;QACtB,UAAU,CAAC,sBAAsB;QACjC,UAAU,CAAC,sBAAsB;KAClC;IACD,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreHttp from \"@azure/core-http\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { EmailRestApiClient } from \"../emailRestApiClient\";\nimport {\n  EmailGetSendStatusResponse,\n  EmailMessage,\n  EmailSendResponse\n} from \"../models\";\n\n/**\n * Class representing a Email.\n */\nexport class Email {\n  private readonly client: EmailRestApiClient;\n\n  /**\n   * Initialize a new instance of the class Email class.\n   * @param client Reference to the service client\n   */\n  constructor(client: EmailRestApiClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets the status of a message sent previously.\n   * @param messageId System generated message id (GUID) returned from a previous call to send email\n   * @param options The options parameters.\n   */\n  getSendStatus(\n    messageId: string,\n    options?: coreHttp.OperationOptions\n  ): Promise<EmailGetSendStatusResponse> {\n    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(\n      options || {}\n    );\n    return this.client.sendOperationRequest(\n      { messageId, options: operationOptions },\n      getSendStatusOperationSpec\n    ) as Promise<EmailGetSendStatusResponse>;\n  }\n\n  /**\n   * Queues an email message to be sent to one or more recipients\n   * @param repeatabilityRequestId If specified, the client directs that the request is repeatable; that\n   *                               is, that the client can make the request multiple times with the same Repeatability-Request-Id and\n   *                               get back an appropriate response without the server executing the request multiple times. The value\n   *                               of the Repeatability-Request-Id is an opaque string representing a client-generated, globally unique\n   *                               for all time, identifier for the request. It is recommended to use version 4 (random) UUIDs.\n   * @param repeatabilityFirstSent Must be sent by clients to specify that a request is repeatable.\n   *                               Repeatability-First-Sent is used to specify the date and time at which the request was first created\n   *                               in the IMF-fix date form of HTTP-date as defined in RFC7231. eg- Tue, 26 Mar 2019 16:06:51 GMT\n   * @param emailMessage Message payload for sending an email\n   * @param options The options parameters.\n   */\n  send(\n    repeatabilityRequestId: string,\n    repeatabilityFirstSent: string,\n    emailMessage: EmailMessage,\n    options?: coreHttp.OperationOptions\n  ): Promise<EmailSendResponse> {\n    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(\n      options || {}\n    );\n    return this.client.sendOperationRequest(\n      {\n        repeatabilityRequestId,\n        repeatabilityFirstSent,\n        emailMessage,\n        options: operationOptions\n      },\n      sendOperationSpec\n    ) as Promise<EmailSendResponse>;\n  }\n}\n// Operation Specifications\n\nconst serializer = new coreHttp.Serializer(Mappers, /* isXml */ false);\n\nconst getSendStatusOperationSpec: coreHttp.OperationSpec = {\n  path: \"/emails/{messageId}/status\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SendStatusResult,\n      headersMapper: Mappers.EmailGetSendStatusHeaders\n    },\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n      headersMapper: Mappers.EmailGetSendStatusHeaders\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.messageId],\n  serializer\n};\nconst sendOperationSpec: coreHttp.OperationSpec = {\n  path: \"/emails:send\",\n  httpMethod: \"POST\",\n  responses: {\n    202: {\n      headersMapper: Mappers.EmailSendHeaders\n    },\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n      headersMapper: Mappers.EmailSendHeaders\n    }\n  },\n  requestBody: Parameters.emailMessage,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint],\n  headerParameters: [\n    Parameters.contentType,\n    Parameters.repeatabilityRequestId,\n    Parameters.repeatabilityFirstSent\n  ],\n  mediaType: \"json\",\n  serializer\n};\n"]}