{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../../src/generated/src/models/index.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreHttp from \"@azure/core-http\";\n\n/**\n * Status of an email message that was sent previously.\n */\nexport interface SendStatusResult {\n  /**\n   * System generated id of an email message sent.\n   */\n  messageId: string;\n  /**\n   * The type indicating the status of a request.\n   */\n  status: SendStatus;\n}\n\n/**\n * The Communication Services error.\n */\nexport interface CommunicationErrorResponse {\n  /**\n   * The Communication Services error.\n   */\n  error: CommunicationError;\n}\n\n/**\n * The Communication Services error.\n */\nexport interface CommunicationError {\n  /**\n   * The error code.\n   */\n  code: string;\n  /**\n   * The error message.\n   */\n  message: string;\n  /**\n   * The error target.\n   */\n  readonly target?: string;\n  /**\n   * Further details about specific errors that led to this error.\n   */\n  readonly details?: CommunicationError[];\n  /**\n   * The inner error if any.\n   */\n  readonly innerError?: CommunicationError;\n}\n\n/**\n * Message payload for sending an email\n */\nexport interface EmailMessage {\n  /**\n   * Custom email headers to be passed.\n   */\n  customHeaders?: EmailCustomHeader[];\n  /**\n   * Sender email address from a verified domain.\n   */\n  sender: string;\n  /**\n   * Email content to be sent.\n   */\n  content: EmailContent;\n  /**\n   * The importance type for the email.\n   */\n  importance?: EmailImportance;\n  /**\n   * Recipients for the email.\n   */\n  recipients: EmailRecipients;\n  /**\n   * list of attachments\n   */\n  attachments?: EmailAttachment[];\n  /**\n   * Email addresses where recipients' replies will be sent to.\n   */\n  replyTo?: EmailAddress[];\n  /**\n   * Indicates whether user engagement tracking should be disabled for this request if the resource-level user engagement tracking setting was already enabled in the control plane.\n   */\n  disableUserEngagementTracking?: boolean;\n}\n\n/**\n * Custom header for email.\n */\nexport interface EmailCustomHeader {\n  /**\n   * Header name.\n   */\n  name: string;\n  /**\n   * Header value.\n   */\n  value: string;\n}\n\n/**\n * Content of the email.\n */\nexport interface EmailContent {\n  /**\n   * Subject of the email message\n   */\n  subject: string;\n  /**\n   * Plain text version of the email message.\n   */\n  plainText?: string;\n  /**\n   * Html version of the email message.\n   */\n  html?: string;\n}\n\n/**\n * Recipients of the email\n */\nexport interface EmailRecipients {\n  /**\n   * Email to recipients\n   */\n  to: EmailAddress[];\n  /**\n   * Email cc recipients\n   */\n  cC?: EmailAddress[];\n  /**\n   * Email bcc recipients\n   */\n  bCC?: EmailAddress[];\n}\n\n/**\n * An object representing the email address and its display name\n */\nexport interface EmailAddress {\n  /**\n   * Email address.\n   */\n  email: string;\n  /**\n   * Email display name.\n   */\n  displayName?: string;\n}\n\n/**\n * Attachment to the email.\n */\nexport interface EmailAttachment {\n  /**\n   * Name of the attachment\n   */\n  name: string;\n  /**\n   * The type of attachment file.\n   */\n  attachmentType: EmailAttachmentType;\n  /**\n   * Base64 encoded contents of the attachment\n   */\n  contentBytesBase64: string;\n}\n\n/**\n * Defines headers for Email_getSendStatus operation.\n */\nexport interface EmailGetSendStatusHeaders {\n  retryAfter?: number;\n}\n\n/**\n * Defines headers for Email_send operation.\n */\nexport interface EmailSendHeaders {\n  repeatabilityResult?: string;\n  operationLocation?: string;\n  retryAfter?: number;\n  xMsRequestId?: string;\n}\n\n/**\n * Defines values for SendStatus.\n */\nexport type SendStatus = \"queued\" | \"outForDelivery\" | \"dropped\";\n/**\n * Defines values for EmailImportance.\n */\nexport type EmailImportance = \"high\" | \"normal\" | \"low\";\n/**\n * Defines values for EmailAttachmentType.\n */\nexport type EmailAttachmentType =\n  | \"avi\"\n  | \"bmp\"\n  | \"doc\"\n  | \"docm\"\n  | \"docx\"\n  | \"gif\"\n  | \"jpeg\"\n  | \"mp3\"\n  | \"one\"\n  | \"pdf\"\n  | \"png\"\n  | \"ppsm\"\n  | \"ppsx\"\n  | \"ppt\"\n  | \"pptm\"\n  | \"pptx\"\n  | \"pub\"\n  | \"rpmsg\"\n  | \"rtf\"\n  | \"tif\"\n  | \"txt\"\n  | \"vsd\"\n  | \"wav\"\n  | \"wma\"\n  | \"xls\"\n  | \"xlsb\"\n  | \"xlsm\"\n  | \"xlsx\";\n\n/**\n * Contains response data for the getSendStatus operation.\n */\nexport type EmailGetSendStatusResponse = EmailGetSendStatusHeaders &\n  SendStatusResult & {\n    /**\n     * The underlying HTTP response.\n     */\n    _response: coreHttp.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: SendStatusResult;\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: EmailGetSendStatusHeaders;\n    };\n  };\n\n/**\n * Contains response data for the send operation.\n */\nexport type EmailSendResponse = EmailSendHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: coreHttp.HttpResponse & {\n    /**\n     * The parsed HTTP response headers.\n     */\n    parsedHeaders: EmailSendHeaders;\n  };\n};\n\n/**\n * Optional parameters.\n */\nexport interface EmailRestApiClientOptionalParams\n  extends coreHttp.ServiceClientOptions {\n  /**\n   * Api Version\n   */\n  apiVersion?: string;\n  /**\n   * Overrides client endpoint.\n   */\n  endpoint?: string;\n}\n"]}