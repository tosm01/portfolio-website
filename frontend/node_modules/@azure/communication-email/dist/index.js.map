{"version":3,"file":"index.js","sources":["../src/generated/src/models/mappers.ts","../src/generated/src/models/parameters.ts","../src/generated/src/operations/email.ts","../src/generated/src/emailRestApiClientContext.ts","../src/generated/src/emailRestApiClient.ts","../src/constants.ts","../src/logger.ts","../src/emailClient.ts"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreHttp from \"@azure/core-http\";\n\nexport const SendStatusResult: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SendStatusResult\",\n    modelProperties: {\n      messageId: {\n        serializedName: \"messageId\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      status: {\n        serializedName: \"status\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CommunicationErrorResponse: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CommunicationErrorResponse\",\n    modelProperties: {\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"CommunicationError\"\n        }\n      }\n    }\n  }\n};\n\nexport const CommunicationError: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CommunicationError\",\n    modelProperties: {\n      code: {\n        serializedName: \"code\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      target: {\n        serializedName: \"target\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      details: {\n        serializedName: \"details\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: { name: \"Composite\", className: \"CommunicationError\" }\n          }\n        }\n      },\n      innerError: {\n        serializedName: \"innererror\",\n        type: {\n          name: \"Composite\",\n          className: \"CommunicationError\"\n        }\n      }\n    }\n  }\n};\n\nexport const EmailMessage: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"EmailMessage\",\n    modelProperties: {\n      customHeaders: {\n        serializedName: \"headers\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: { name: \"Composite\", className: \"EmailCustomHeader\" }\n          }\n        }\n      },\n      sender: {\n        serializedName: \"sender\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      content: {\n        serializedName: \"content\",\n        type: {\n          name: \"Composite\",\n          className: \"EmailContent\"\n        }\n      },\n      importance: {\n        defaultValue: \"normal\",\n        serializedName: \"importance\",\n        type: {\n          name: \"String\"\n        }\n      },\n      recipients: {\n        serializedName: \"recipients\",\n        type: {\n          name: \"Composite\",\n          className: \"EmailRecipients\"\n        }\n      },\n      attachments: {\n        serializedName: \"attachments\",\n        type: {\n          name: \"Sequence\",\n          element: { type: { name: \"Composite\", className: \"EmailAttachment\" } }\n        }\n      },\n      replyTo: {\n        serializedName: \"replyTo\",\n        type: {\n          name: \"Sequence\",\n          element: { type: { name: \"Composite\", className: \"EmailAddress\" } }\n        }\n      },\n      disableUserEngagementTracking: {\n        serializedName: \"disableUserEngagementTracking\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const EmailCustomHeader: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"EmailCustomHeader\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const EmailContent: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"EmailContent\",\n    modelProperties: {\n      subject: {\n        serializedName: \"subject\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      plainText: {\n        serializedName: \"plainText\",\n        type: {\n          name: \"String\"\n        }\n      },\n      html: {\n        serializedName: \"html\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const EmailRecipients: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"EmailRecipients\",\n    modelProperties: {\n      to: {\n        serializedName: \"to\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: { type: { name: \"Composite\", className: \"EmailAddress\" } }\n        }\n      },\n      cC: {\n        serializedName: \"cC\",\n        type: {\n          name: \"Sequence\",\n          element: { type: { name: \"Composite\", className: \"EmailAddress\" } }\n        }\n      },\n      bCC: {\n        serializedName: \"bCC\",\n        type: {\n          name: \"Sequence\",\n          element: { type: { name: \"Composite\", className: \"EmailAddress\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const EmailAddress: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"EmailAddress\",\n    modelProperties: {\n      email: {\n        serializedName: \"email\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      displayName: {\n        serializedName: \"displayName\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const EmailAttachment: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"EmailAttachment\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      attachmentType: {\n        serializedName: \"attachmentType\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      contentBytesBase64: {\n        serializedName: \"contentBytesBase64\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const EmailGetSendStatusHeaders: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"EmailGetSendStatusHeaders\",\n    modelProperties: {\n      retryAfter: {\n        serializedName: \"retry-after\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const EmailSendHeaders: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"EmailSendHeaders\",\n    modelProperties: {\n      repeatabilityResult: {\n        serializedName: \"repeatability-result\",\n        type: {\n          name: \"String\"\n        }\n      },\n      operationLocation: {\n        serializedName: \"operation-location\",\n        type: {\n          name: \"String\"\n        }\n      },\n      retryAfter: {\n        serializedName: \"retry-after\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      xMsRequestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport {\n  OperationURLParameter,\n  OperationQueryParameter,\n  OperationParameter\n} from \"@azure/core-http\";\nimport { EmailMessage as EmailMessageMapper } from \"../models/mappers\";\n\nexport const endpoint: OperationURLParameter = {\n  parameterPath: \"endpoint\",\n  mapper: {\n    serializedName: \"endpoint\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const messageId: OperationURLParameter = {\n  parameterPath: \"messageId\",\n  mapper: {\n    serializedName: \"messageId\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const apiVersion: OperationQueryParameter = {\n  parameterPath: \"apiVersion\",\n  mapper: {\n    defaultValue: \"2021-10-01-preview\",\n    isConstant: true,\n    serializedName: \"api-version\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const contentType: OperationParameter = {\n  parameterPath: [\"options\", \"contentType\"],\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Content-Type\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const emailMessage: OperationParameter = {\n  parameterPath: \"emailMessage\",\n  mapper: EmailMessageMapper\n};\n\nexport const repeatabilityRequestId: OperationParameter = {\n  parameterPath: \"repeatabilityRequestId\",\n  mapper: {\n    serializedName: \"repeatability-request-id\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const repeatabilityFirstSent: OperationParameter = {\n  parameterPath: \"repeatabilityFirstSent\",\n  mapper: {\n    serializedName: \"repeatability-first-sent\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreHttp from \"@azure/core-http\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { EmailRestApiClient } from \"../emailRestApiClient\";\nimport {\n  EmailGetSendStatusResponse,\n  EmailMessage,\n  EmailSendResponse\n} from \"../models\";\n\n/**\n * Class representing a Email.\n */\nexport class Email {\n  private readonly client: EmailRestApiClient;\n\n  /**\n   * Initialize a new instance of the class Email class.\n   * @param client Reference to the service client\n   */\n  constructor(client: EmailRestApiClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets the status of a message sent previously.\n   * @param messageId System generated message id (GUID) returned from a previous call to send email\n   * @param options The options parameters.\n   */\n  getSendStatus(\n    messageId: string,\n    options?: coreHttp.OperationOptions\n  ): Promise<EmailGetSendStatusResponse> {\n    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(\n      options || {}\n    );\n    return this.client.sendOperationRequest(\n      { messageId, options: operationOptions },\n      getSendStatusOperationSpec\n    ) as Promise<EmailGetSendStatusResponse>;\n  }\n\n  /**\n   * Queues an email message to be sent to one or more recipients\n   * @param repeatabilityRequestId If specified, the client directs that the request is repeatable; that\n   *                               is, that the client can make the request multiple times with the same Repeatability-Request-Id and\n   *                               get back an appropriate response without the server executing the request multiple times. The value\n   *                               of the Repeatability-Request-Id is an opaque string representing a client-generated, globally unique\n   *                               for all time, identifier for the request. It is recommended to use version 4 (random) UUIDs.\n   * @param repeatabilityFirstSent Must be sent by clients to specify that a request is repeatable.\n   *                               Repeatability-First-Sent is used to specify the date and time at which the request was first created\n   *                               in the IMF-fix date form of HTTP-date as defined in RFC7231. eg- Tue, 26 Mar 2019 16:06:51 GMT\n   * @param emailMessage Message payload for sending an email\n   * @param options The options parameters.\n   */\n  send(\n    repeatabilityRequestId: string,\n    repeatabilityFirstSent: string,\n    emailMessage: EmailMessage,\n    options?: coreHttp.OperationOptions\n  ): Promise<EmailSendResponse> {\n    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(\n      options || {}\n    );\n    return this.client.sendOperationRequest(\n      {\n        repeatabilityRequestId,\n        repeatabilityFirstSent,\n        emailMessage,\n        options: operationOptions\n      },\n      sendOperationSpec\n    ) as Promise<EmailSendResponse>;\n  }\n}\n// Operation Specifications\n\nconst serializer = new coreHttp.Serializer(Mappers, /* isXml */ false);\n\nconst getSendStatusOperationSpec: coreHttp.OperationSpec = {\n  path: \"/emails/{messageId}/status\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SendStatusResult,\n      headersMapper: Mappers.EmailGetSendStatusHeaders\n    },\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n      headersMapper: Mappers.EmailGetSendStatusHeaders\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.messageId],\n  serializer\n};\nconst sendOperationSpec: coreHttp.OperationSpec = {\n  path: \"/emails:send\",\n  httpMethod: \"POST\",\n  responses: {\n    202: {\n      headersMapper: Mappers.EmailSendHeaders\n    },\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n      headersMapper: Mappers.EmailSendHeaders\n    }\n  },\n  requestBody: Parameters.emailMessage,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint],\n  headerParameters: [\n    Parameters.contentType,\n    Parameters.repeatabilityRequestId,\n    Parameters.repeatabilityFirstSent\n  ],\n  mediaType: \"json\",\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreHttp from \"@azure/core-http\";\nimport { EmailRestApiClientOptionalParams } from \"./models\";\n\nconst packageName = \"@azure/communication-email\";\nconst packageVersion = \"1.0.0-beta.1\";\n\nexport class EmailRestApiClientContext extends coreHttp.ServiceClient {\n  endpoint: string;\n  apiVersion: string;\n\n  /**\n   * Initializes a new instance of the EmailRestApiClientContext class.\n   * @param endpoint The communication resource, for example https://my-resource.communication.azure.com\n   * @param options The parameter options\n   */\n  constructor(endpoint: string, options?: EmailRestApiClientOptionalParams) {\n    if (endpoint === undefined) {\n      throw new Error(\"'endpoint' cannot be null\");\n    }\n\n    // Initializing default values for options\n    if (!options) {\n      options = {};\n    }\n\n    if (!options.userAgent) {\n      const defaultUserAgent = coreHttp.getDefaultUserAgentValue();\n      options.userAgent = `${packageName}/${packageVersion} ${defaultUserAgent}`;\n    }\n\n    super(undefined, options);\n\n    this.requestContentType = \"application/json; charset=utf-8\";\n\n    this.baseUri = options.endpoint || \"{endpoint}\";\n\n    // Parameter assignments\n    this.endpoint = endpoint;\n\n    // Assigning values to Constant parameters\n    this.apiVersion = options.apiVersion || \"2021-10-01-preview\";\n  }\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as operations from \"./operations\";\nimport * as Models from \"./models\";\nimport * as Mappers from \"./models/mappers\";\nimport { EmailRestApiClientContext } from \"./emailRestApiClientContext\";\nimport { EmailRestApiClientOptionalParams } from \"./models\";\n\nclass EmailRestApiClient extends EmailRestApiClientContext {\n  /**\n   * Initializes a new instance of the EmailRestApiClient class.\n   * @param endpoint The communication resource, for example https://my-resource.communication.azure.com\n   * @param options The parameter options\n   */\n  constructor(endpoint: string, options?: EmailRestApiClientOptionalParams) {\n    super(endpoint, options);\n    this.email = new operations.Email(this);\n  }\n\n  email: operations.Email;\n}\n\n// Operation Specifications\n\nexport {\n  EmailRestApiClient,\n  EmailRestApiClientContext,\n  Models as EmailRestApiModels,\n  Mappers as EmailRestApiMappers\n};\nexport * from \"./operations\";\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nexport const SDK_VERSION: string = \"1.0.0-beta.1\";\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { createClientLogger } from \"@azure/logger\";\n\n/**\n * The \\@azure/logger configuration for this package.\n */\nexport const logger = createClientLogger(\"communication-email\");\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { EmailClientOptions, EmailMessage, SendEmailResult, SendStatusResult } from \"./models\";\nimport {\n  InternalPipelineOptions,\n  RequestPolicyFactory,\n  ServiceClientOptions,\n  createPipelineFromOptions,\n} from \"@azure/core-http\";\nimport {\n  createCommunicationAuthPolicy,\n  isKeyCredential,\n  parseClientArguments,\n} from \"@azure/communication-common\";\nimport { EmailRestApiClient } from \"./generated/src/emailRestApiClient\";\nimport { KeyCredential } from \"@azure/core-auth\";\nimport { SDK_VERSION } from \"./constants\";\nimport { logger } from \"./logger\";\nimport { v4 as uuid } from \"uuid\";\n\n/**\n * Checks whether the type of a value is EmailClientOptions or not.\n *\n * @param options - The value being checked.\n */\nconst isEmailClientOptions = (options: any): options is EmailClientOptions =>\n  !!options && !isKeyCredential(options);\n\n/**\n *  The Email service client.\n */\nexport class EmailClient {\n  private readonly api: EmailRestApiClient;\n\n  /**\n   * Initializes a new instance of the EmailClient class.\n   * @param connectionString - Connection string to connect to an Azure Communication Service resource.\n   *                         Example: \"endpoint=https://contoso.eastus.communications.azure.net/;accesskey=secret\";\n   * @param options - Optional. Options to configure the HTTP pipeline.\n   */\n  constructor(connectionString: string, options?: EmailClientOptions);\n\n  /**\n   * Initializes a new instance of the EmailClient class using an Azure KeyCredential.\n   * @param endpoint - The endpoint of the service (ex: https://contoso.eastus.communications.azure.net).\n   * @param credential - An object that is used to authenticate requests to the service. Use the Azure KeyCredential or `@azure/identity` to create a credential.\n   * @param options - Optional. Options to configure the HTTP pipeline.\n   */\n  constructor(endpoint: string, credential: KeyCredential, options?: EmailClientOptions);\n\n  constructor(\n    connectionStringOrUrl: string,\n    credentialOrOptions?: EmailClientOptions | KeyCredential,\n    maybeOptions: EmailClientOptions = {}\n  ) {\n    const { url, credential } = parseClientArguments(connectionStringOrUrl, credentialOrOptions);\n    const options = isEmailClientOptions(credentialOrOptions) ? credentialOrOptions : maybeOptions;\n    const libInfo = `azsdk-js-communication-email/${SDK_VERSION}`;\n\n    if (!options.userAgentOptions) {\n      options.userAgentOptions = {};\n    }\n\n    if (options.userAgentOptions.userAgentPrefix) {\n      options.userAgentOptions.userAgentPrefix = `${options.userAgentOptions.userAgentPrefix} ${libInfo}`;\n    } else {\n      options.userAgentOptions.userAgentPrefix = libInfo;\n    }\n\n    const internalPipelineOptions: InternalPipelineOptions = {\n      ...options,\n      ...{\n        loggingOptions: {\n          logger: logger.info,\n        },\n      },\n    };\n\n    const authPolicy: RequestPolicyFactory = createCommunicationAuthPolicy(credential);\n    const pipeline: ServiceClientOptions = createPipelineFromOptions(\n      internalPipelineOptions,\n      authPolicy\n    );\n\n    this.api = new EmailRestApiClient(url, pipeline);\n  }\n\n  /**\n   * Queues an email message to be sent to one or more recipients\n   * @param emailMessage - Message payload for sending an email\n   */\n  public async send(emailMessage: EmailMessage): Promise<SendEmailResult> {\n    const response = await this.api.email.send(uuid(), new Date().toUTCString(), emailMessage);\n\n    return {\n      messageId: response.xMsRequestId ?? \"\",\n    };\n  }\n\n  /**\n   * Gets the status of a message sent previously.\n   * @param messageId - System generated message id (GUID) returned from a previous call to send email\n   */\n  public async getSendStatus(messageId: string): Promise<SendStatusResult> {\n    const response = await this.api.email.getSendStatus(messageId);\n\n    return {\n      messageId: response.messageId,\n      status: response.status,\n    };\n  }\n}\n"],"names":["EmailMessageMapper","coreHttp","Mappers.SendStatusResult","Mappers.EmailGetSendStatusHeaders","Mappers.CommunicationErrorResponse","Parameters.apiVersion","Parameters.endpoint","Parameters.messageId","Mappers.EmailSendHeaders","Parameters.emailMessage","Parameters.contentType","Parameters.repeatabilityRequestId","Parameters.repeatabilityFirstSent","operations.Email","createClientLogger","isKeyCredential","parseClientArguments","createCommunicationAuthPolicy","createPipelineFromOptions","uuid"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;AAMG;AAII,MAAM,gBAAgB,GAA6B;AACxD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,kBAAkB;AAC7B,QAAA,eAAe,EAAE;AACf,YAAA,SAAS,EAAE;AACT,gBAAA,cAAc,EAAE,WAAW;AAC3B,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,MAAM,EAAE;AACN,gBAAA,cAAc,EAAE,QAAQ;AACxB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,0BAA0B,GAA6B;AAClE,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,4BAA4B;AACvC,QAAA,eAAe,EAAE;AACf,YAAA,KAAK,EAAE;AACL,gBAAA,cAAc,EAAE,OAAO;AACvB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,oBAAoB;AAChC,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,kBAAkB,GAA6B;AAC1D,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,oBAAoB;AAC/B,QAAA,eAAe,EAAE;AACf,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,OAAO,EAAE;AACP,gBAAA,cAAc,EAAE,SAAS;AACzB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,MAAM,EAAE;AACN,gBAAA,cAAc,EAAE,QAAQ;AACxB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,OAAO,EAAE;AACP,gBAAA,cAAc,EAAE,SAAS;AACzB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;wBACP,IAAI,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,oBAAoB,EAAE;AAC7D,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,UAAU,EAAE;AACV,gBAAA,cAAc,EAAE,YAAY;AAC5B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,oBAAoB;AAChC,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,YAAY,GAA6B;AACpD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,cAAc;AACzB,QAAA,eAAe,EAAE;AACf,YAAA,aAAa,EAAE;AACb,gBAAA,cAAc,EAAE,SAAS;AACzB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;wBACP,IAAI,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,mBAAmB,EAAE;AAC5D,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,MAAM,EAAE;AACN,gBAAA,cAAc,EAAE,QAAQ;AACxB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,OAAO,EAAE;AACP,gBAAA,cAAc,EAAE,SAAS;AACzB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,cAAc;AAC1B,iBAAA;AACF,aAAA;AACD,YAAA,UAAU,EAAE;AACV,gBAAA,YAAY,EAAE,QAAQ;AACtB,gBAAA,cAAc,EAAE,YAAY;AAC5B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,UAAU,EAAE;AACV,gBAAA,cAAc,EAAE,YAAY;AAC5B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,iBAAiB;AAC7B,iBAAA;AACF,aAAA;AACD,YAAA,WAAW,EAAE;AACX,gBAAA,cAAc,EAAE,aAAa;AAC7B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,iBAAiB,EAAE,EAAE;AACvE,iBAAA;AACF,aAAA;AACD,YAAA,OAAO,EAAE;AACP,gBAAA,cAAc,EAAE,SAAS;AACzB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,cAAc,EAAE,EAAE;AACpE,iBAAA;AACF,aAAA;AACD,YAAA,6BAA6B,EAAE;AAC7B,gBAAA,cAAc,EAAE,+BAA+B;AAC/C,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,SAAS;AAChB,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,iBAAiB,GAA6B;AACzD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,mBAAmB;AAC9B,QAAA,eAAe,EAAE;AACf,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,KAAK,EAAE;AACL,gBAAA,cAAc,EAAE,OAAO;AACvB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,YAAY,GAA6B;AACpD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,cAAc;AACzB,QAAA,eAAe,EAAE;AACf,YAAA,OAAO,EAAE;AACP,gBAAA,cAAc,EAAE,SAAS;AACzB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,SAAS,EAAE;AACT,gBAAA,cAAc,EAAE,WAAW;AAC3B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,eAAe,GAA6B;AACvD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,iBAAiB;AAC5B,QAAA,eAAe,EAAE;AACf,YAAA,EAAE,EAAE;AACF,gBAAA,cAAc,EAAE,IAAI;AACpB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,cAAc,EAAE,EAAE;AACpE,iBAAA;AACF,aAAA;AACD,YAAA,EAAE,EAAE;AACF,gBAAA,cAAc,EAAE,IAAI;AACpB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,cAAc,EAAE,EAAE;AACpE,iBAAA;AACF,aAAA;AACD,YAAA,GAAG,EAAE;AACH,gBAAA,cAAc,EAAE,KAAK;AACrB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,cAAc,EAAE,EAAE;AACpE,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,YAAY,GAA6B;AACpD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,cAAc;AACzB,QAAA,eAAe,EAAE;AACf,YAAA,KAAK,EAAE;AACL,gBAAA,cAAc,EAAE,OAAO;AACvB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,WAAW,EAAE;AACX,gBAAA,cAAc,EAAE,aAAa;AAC7B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,eAAe,GAA6B;AACvD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,iBAAiB;AAC5B,QAAA,eAAe,EAAE;AACf,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,cAAc,EAAE;AACd,gBAAA,cAAc,EAAE,gBAAgB;AAChC,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,kBAAkB,EAAE;AAClB,gBAAA,cAAc,EAAE,oBAAoB;AACpC,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,yBAAyB,GAA6B;AACjE,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,2BAA2B;AACtC,QAAA,eAAe,EAAE;AACf,YAAA,UAAU,EAAE;AACV,gBAAA,cAAc,EAAE,aAAa;AAC7B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,gBAAgB,GAA6B;AACxD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,kBAAkB;AAC7B,QAAA,eAAe,EAAE;AACf,YAAA,mBAAmB,EAAE;AACnB,gBAAA,cAAc,EAAE,sBAAsB;AACtC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,iBAAiB,EAAE;AACjB,gBAAA,cAAc,EAAE,oBAAoB;AACpC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,UAAU,EAAE;AACV,gBAAA,cAAc,EAAE,aAAa;AAC7B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,YAAY,EAAE;AACZ,gBAAA,cAAc,EAAE,iBAAiB;AACjC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF;;;;;;;;;;;;;;;;;ACtVD;;;;;;AAMG;AASI,MAAM,QAAQ,GAA0B;AAC7C,IAAA,aAAa,EAAE,UAAU;AACzB,IAAA,MAAM,EAAE;AACN,QAAA,cAAc,EAAE,UAAU;AAC1B,QAAA,QAAQ,EAAE,IAAI;AACd,QAAA,IAAI,EAAE;AACJ,YAAA,IAAI,EAAE,QAAQ;AACf,SAAA;AACF,KAAA;AACD,IAAA,YAAY,EAAE,IAAI;CACnB,CAAC;AAEK,MAAM,SAAS,GAA0B;AAC9C,IAAA,aAAa,EAAE,WAAW;AAC1B,IAAA,MAAM,EAAE;AACN,QAAA,cAAc,EAAE,WAAW;AAC3B,QAAA,QAAQ,EAAE,IAAI;AACd,QAAA,IAAI,EAAE;AACJ,YAAA,IAAI,EAAE,QAAQ;AACf,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,UAAU,GAA4B;AACjD,IAAA,aAAa,EAAE,YAAY;AAC3B,IAAA,MAAM,EAAE;AACN,QAAA,YAAY,EAAE,oBAAoB;AAClC,QAAA,UAAU,EAAE,IAAI;AAChB,QAAA,cAAc,EAAE,aAAa;AAC7B,QAAA,IAAI,EAAE;AACJ,YAAA,IAAI,EAAE,QAAQ;AACf,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,WAAW,GAAuB;AAC7C,IAAA,aAAa,EAAE,CAAC,SAAS,EAAE,aAAa,CAAC;AACzC,IAAA,MAAM,EAAE;AACN,QAAA,YAAY,EAAE,kBAAkB;AAChC,QAAA,UAAU,EAAE,IAAI;AAChB,QAAA,cAAc,EAAE,cAAc;AAC9B,QAAA,IAAI,EAAE;AACJ,YAAA,IAAI,EAAE,QAAQ;AACf,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,YAAY,GAAuB;AAC9C,IAAA,aAAa,EAAE,cAAc;AAC7B,IAAA,MAAM,EAAEA,YAAkB;CAC3B,CAAC;AAEK,MAAM,sBAAsB,GAAuB;AACxD,IAAA,aAAa,EAAE,wBAAwB;AACvC,IAAA,MAAM,EAAE;AACN,QAAA,cAAc,EAAE,0BAA0B;AAC1C,QAAA,QAAQ,EAAE,IAAI;AACd,QAAA,IAAI,EAAE;AACJ,YAAA,IAAI,EAAE,QAAQ;AACf,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,sBAAsB,GAAuB;AACxD,IAAA,aAAa,EAAE,wBAAwB;AACvC,IAAA,MAAM,EAAE;AACN,QAAA,cAAc,EAAE,0BAA0B;AAC1C,QAAA,QAAQ,EAAE,IAAI;AACd,QAAA,IAAI,EAAE;AACJ,YAAA,IAAI,EAAE,QAAQ;AACf,SAAA;AACF,KAAA;CACF;;ACvFD;;;;;;AAMG;AAYH;;AAEG;MACU,KAAK,CAAA;AAGhB;;;AAGG;AACH,IAAA,WAAA,CAAY,MAA0B,EAAA;AACpC,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;AAED;;;;AAIG;IACH,aAAa,CACX,SAAiB,EACjB,OAAmC,EAAA;QAEnC,MAAM,gBAAgB,GAAgCC,mBAAQ,CAAC,oCAAoC,CACjG,OAAO,IAAI,EAAE,CACd,CAAC;AACF,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,SAAS,EAAE,OAAO,EAAE,gBAAgB,EAAE,EACxC,0BAA0B,CACY,CAAC;KAC1C;AAED;;;;;;;;;;;;AAYG;AACH,IAAA,IAAI,CACF,sBAA8B,EAC9B,sBAA8B,EAC9B,YAA0B,EAC1B,OAAmC,EAAA;QAEnC,MAAM,gBAAgB,GAAgCA,mBAAQ,CAAC,oCAAoC,CACjG,OAAO,IAAI,EAAE,CACd,CAAC;AACF,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;YACE,sBAAsB;YACtB,sBAAsB;YACtB,YAAY;AACZ,YAAA,OAAO,EAAE,gBAAgB;SAC1B,EACD,iBAAiB,CACY,CAAC;KACjC;AACF,CAAA;AACD;AAEA,MAAM,UAAU,GAAG,IAAIA,mBAAQ,CAAC,UAAU,CAAC,OAAO,cAAc,KAAK,CAAC,CAAC;AAEvE,MAAM,0BAA0B,GAA2B;AACzD,IAAA,IAAI,EAAE,4BAA4B;AAClC,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEC,gBAAwB;YACpC,aAAa,EAAEC,yBAAiC;AACjD,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAEC,0BAAkC;YAC9C,aAAa,EAAED,yBAAiC;AACjD,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAACE,UAAqB,CAAC;IACxC,aAAa,EAAE,CAACC,QAAmB,EAAEC,SAAoB,CAAC;IAC1D,UAAU;CACX,CAAC;AACF,MAAM,iBAAiB,GAA2B;AAChD,IAAA,IAAI,EAAE,cAAc;AACpB,IAAA,UAAU,EAAE,MAAM;AAClB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,aAAa,EAAEC,gBAAwB;AACxC,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAEJ,0BAAkC;YAC9C,aAAa,EAAEI,gBAAwB;AACxC,SAAA;AACF,KAAA;IACD,WAAW,EAAEC,YAAuB;AACpC,IAAA,eAAe,EAAE,CAACJ,UAAqB,CAAC;AACxC,IAAA,aAAa,EAAE,CAACC,QAAmB,CAAC;AACpC,IAAA,gBAAgB,EAAE;AAChB,QAAAI,WAAsB;AACtB,QAAAC,sBAAiC;AACjC,QAAAC,sBAAiC;AAClC,KAAA;AACD,IAAA,SAAS,EAAE,MAAM;IACjB,UAAU;CACX;;AC9HD;;;;;;AAMG;AAKH,MAAM,WAAW,GAAG,4BAA4B,CAAC;AACjD,MAAM,cAAc,GAAG,cAAc,CAAC;AAEzB,MAAA,yBAA0B,SAAQX,mBAAQ,CAAC,aAAa,CAAA;AAInE;;;;AAIG;IACH,WAAY,CAAA,QAAgB,EAAE,OAA0C,EAAA;QACtE,IAAI,QAAQ,KAAK,SAAS,EAAE;AAC1B,YAAA,MAAM,IAAI,KAAK,CAAC,2BAA2B,CAAC,CAAC;AAC9C,SAAA;;QAGD,IAAI,CAAC,OAAO,EAAE;YACZ,OAAO,GAAG,EAAE,CAAC;AACd,SAAA;AAED,QAAA,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE;AACtB,YAAA,MAAM,gBAAgB,GAAGA,mBAAQ,CAAC,wBAAwB,EAAE,CAAC;YAC7D,OAAO,CAAC,SAAS,GAAG,CAAG,EAAA,WAAW,IAAI,cAAc,CAAA,CAAA,EAAI,gBAAgB,CAAA,CAAE,CAAC;AAC5E,SAAA;AAED,QAAA,KAAK,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;AAE1B,QAAA,IAAI,CAAC,kBAAkB,GAAG,iCAAiC,CAAC;QAE5D,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,QAAQ,IAAI,YAAY,CAAC;;AAGhD,QAAA,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;;QAGzB,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC,UAAU,IAAI,oBAAoB,CAAC;KAC9D;AACF;;AClDD;;;;;;AAMG;AAQH,MAAM,kBAAmB,SAAQ,yBAAyB,CAAA;AACxD;;;;AAIG;IACH,WAAY,CAAA,QAAgB,EAAE,OAA0C,EAAA;AACtE,QAAA,KAAK,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;QACzB,IAAI,CAAC,KAAK,GAAG,IAAIY,KAAgB,CAAC,IAAI,CAAC,CAAC;KACzC;AAGF;;AC1BD;AACA;AAEO,MAAM,WAAW,GAAW,cAAc;;ACHjD;AAKA;;AAEG;AACI,MAAM,MAAM,GAAGC,2BAAkB,CAAC,qBAAqB,CAAC;;ACR/D;AAqBA;;;;AAIG;AACH,MAAM,oBAAoB,GAAG,CAAC,OAAY,KACxC,CAAC,CAAC,OAAO,IAAI,CAACC,mCAAe,CAAC,OAAO,CAAC,CAAC;AAEzC;;AAEG;MACU,WAAW,CAAA;AAmBtB,IAAA,WAAA,CACE,qBAA6B,EAC7B,mBAAwD,EACxD,eAAmC,EAAE,EAAA;AAErC,QAAA,MAAM,EAAE,GAAG,EAAE,UAAU,EAAE,GAAGC,wCAAoB,CAAC,qBAAqB,EAAE,mBAAmB,CAAC,CAAC;AAC7F,QAAA,MAAM,OAAO,GAAG,oBAAoB,CAAC,mBAAmB,CAAC,GAAG,mBAAmB,GAAG,YAAY,CAAC;AAC/F,QAAA,MAAM,OAAO,GAAG,CAAgC,6BAAA,EAAA,WAAW,EAAE,CAAC;AAE9D,QAAA,IAAI,CAAC,OAAO,CAAC,gBAAgB,EAAE;AAC7B,YAAA,OAAO,CAAC,gBAAgB,GAAG,EAAE,CAAC;AAC/B,SAAA;AAED,QAAA,IAAI,OAAO,CAAC,gBAAgB,CAAC,eAAe,EAAE;AAC5C,YAAA,OAAO,CAAC,gBAAgB,CAAC,eAAe,GAAG,CAAG,EAAA,OAAO,CAAC,gBAAgB,CAAC,eAAe,CAAI,CAAA,EAAA,OAAO,EAAE,CAAC;AACrG,SAAA;AAAM,aAAA;AACL,YAAA,OAAO,CAAC,gBAAgB,CAAC,eAAe,GAAG,OAAO,CAAC;AACpD,SAAA;QAED,MAAM,uBAAuB,GACxB,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,OAAO,CACP,EAAA;AACD,YAAA,cAAc,EAAE;gBACd,MAAM,EAAE,MAAM,CAAC,IAAI;AACpB,aAAA;AACF,SAAA,CACF,CAAC;AAEF,QAAA,MAAM,UAAU,GAAyBC,iDAA6B,CAAC,UAAU,CAAC,CAAC;QACnF,MAAM,QAAQ,GAAyBC,kCAAyB,CAC9D,uBAAuB,EACvB,UAAU,CACX,CAAC;QAEF,IAAI,CAAC,GAAG,GAAG,IAAI,kBAAkB,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;KAClD;AAED;;;AAGG;IACI,MAAM,IAAI,CAAC,YAA0B,EAAA;;QAC1C,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAACC,OAAI,EAAE,EAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,EAAE,YAAY,CAAC,CAAC;QAE3F,OAAO;AACL,YAAA,SAAS,EAAE,CAAA,EAAA,GAAA,QAAQ,CAAC,YAAY,mCAAI,EAAE;SACvC,CAAC;KACH;AAED;;;AAGG;IACI,MAAM,aAAa,CAAC,SAAiB,EAAA;AAC1C,QAAA,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;QAE/D,OAAO;YACL,SAAS,EAAE,QAAQ,CAAC,SAAS;YAC7B,MAAM,EAAE,QAAQ,CAAC,MAAM;SACxB,CAAC;KACH;AACF;;;;"}